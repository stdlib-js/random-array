// Copyright (c) 2023 The Stdlib Authors. License is Apache-2.0: http://www.apache.org/licenses/LICENSE-2.0
var r,e;r=this,e=function(r,e,a,t,n,o,i,l,d,u){"use strict";var m="function"==typeof Object.defineProperty?Object.defineProperty:null,s=Object.defineProperty,b=Object.prototype,c=b.toString,y=b.__defineGetter__,f=b.__defineSetter__,p=b.__lookupGetter__,_=b.__lookupSetter__,g=function(){try{return m({},"x",{}),!0}catch(r){return!1}}()?s:function(r,e,a){var t,n,o,i;if("object"!=typeof r||null===r||"[object Array]"===c.call(r))throw new TypeError("invalid argument. First argument must be an object. Value: `"+r+"`.");if("object"!=typeof a||null===a||"[object Array]"===c.call(a))throw new TypeError("invalid argument. Property descriptor must be an object. Value: `"+a+"`.");if((n="value"in a)&&(p.call(r,e)||_.call(r,e)?(t=r.__proto__,r.__proto__=b,delete r[e],r[e]=a.value,r.__proto__=t):r[e]=a.value),o="get"in a,i="set"in a,n&&(o||i))throw new Error("invalid argument. Cannot specify one or more accessors and a value or writable attribute in the property descriptor.");return o&&y&&y.call(r,e,a.get),i&&f&&f.call(r,e,a.set),r};function v(r,e,a){g(r,e,{configurable:!1,enumerable:!0,writable:!1,value:a})}var j={};return v(j,"arcsine",r),v(j,"beta",e),v(j,"discreteUniform",a),v(j,"exponential",t),v(j,"lognormal",n),v(j,"minstd",o),v(j,"mt19937",i),v(j,"normal",l),v(j,"randu",d),v(j,"uniform",u),j},"object"==typeof exports&&"undefined"!=typeof module?module.exports=e(require("@stdlib/random-array-arcsine"),require("@stdlib/random-array-beta"),require("@stdlib/random-array-discrete-uniform"),require("@stdlib/random-array-exponential"),require("@stdlib/random-array-lognormal"),require("@stdlib/random-array-minstd"),require("@stdlib/random-array-mt19937"),require("@stdlib/random-array-normal"),require("@stdlib/random-array-randu"),require("@stdlib/random-array-uniform")):"function"==typeof define&&define.amd?define(["@stdlib/random-array-arcsine","@stdlib/random-array-beta","@stdlib/random-array-discrete-uniform","@stdlib/random-array-exponential","@stdlib/random-array-lognormal","@stdlib/random-array-minstd","@stdlib/random-array-mt19937","@stdlib/random-array-normal","@stdlib/random-array-randu","@stdlib/random-array-uniform"],e):(r="undefined"!=typeof globalThis?globalThis:r||self).ns=e(r.arcsine,r.beta,r.discreteUniform,r.exponential,r.lognormal,r.minstd,r.mt19937,r.normal,r.randu,r.uniform);
//# sourceMappingURL=index.js.map
