// Copyright (c) 2023 The Stdlib Authors. License is Apache-2.0: http://www.apache.org/licenses/LICENSE-2.0
/// <reference types="./mod.d.ts" />
import r from"@stdlib/random-array-arcsine";export{default as arcsine}from"@stdlib/random-array-arcsine";import a from"@stdlib/random-array-beta";export{default as beta}from"@stdlib/random-array-beta";import t from"@stdlib/random-array-betaprime";export{default as betaprime}from"@stdlib/random-array-betaprime";import o from"@stdlib/random-array-discrete-uniform";export{default as discreteUniform}from"@stdlib/random-array-discrete-uniform";import e from"@stdlib/random-array-exponential";export{default as exponential}from"@stdlib/random-array-exponential";import m from"@stdlib/random-array-gamma";export{default as gamma}from"@stdlib/random-array-gamma";import n from"@stdlib/random-array-invgamma";export{default as invgamma}from"@stdlib/random-array-invgamma";import i from"@stdlib/random-array-lognormal";export{default as lognormal}from"@stdlib/random-array-lognormal";import l from"@stdlib/random-array-minstd";export{default as minstd}from"@stdlib/random-array-minstd";import d from"@stdlib/random-array-mt19937";export{default as mt19937}from"@stdlib/random-array-mt19937";import f from"@stdlib/random-array-normal";export{default as normal}from"@stdlib/random-array-normal";import s from"@stdlib/random-array-randu";export{default as randu}from"@stdlib/random-array-randu";import p from"@stdlib/random-array-uniform";export{default as uniform}from"@stdlib/random-array-uniform";var u="function"==typeof Object.defineProperty?Object.defineProperty:null;var b=Object.defineProperty,y=Object.prototype,c=y.toString,_=y.__defineGetter__,g=y.__defineSetter__,x=y.__lookupGetter__,v=y.__lookupSetter__;var j=function(){try{return u({},"x",{}),!0}catch(r){return!1}}()?b:function(r,a,t){var o,e,m,n;if("object"!=typeof r||null===r||"[object Array]"===c.call(r))throw new TypeError("invalid argument. First argument must be an object. Value: `"+r+"`.");if("object"!=typeof t||null===t||"[object Array]"===c.call(t))throw new TypeError("invalid argument. Property descriptor must be an object. Value: `"+t+"`.");if((e="value"in t)&&(x.call(r,a)||v.call(r,a)?(o=r.__proto__,r.__proto__=y,delete r[a],r[a]=t.value,r.__proto__=o):r[a]=t.value),m="get"in t,n="set"in t,e&&(m||n))throw new Error("invalid argument. Cannot specify one or more accessors and a value or writable attribute in the property descriptor.");return m&&_&&_.call(r,a,t.get),n&&g&&g.call(r,a,t.set),r};function w(r,a,t){j(r,a,{configurable:!1,enumerable:!0,writable:!1,value:t})}var h={};w(h,"arcsine",r),w(h,"beta",a),w(h,"betaprime",t),w(h,"discreteUniform",o),w(h,"exponential",e),w(h,"gamma",m),w(h,"invgamma",n),w(h,"lognormal",i),w(h,"minstd",l),w(h,"mt19937",d),w(h,"normal",f),w(h,"randu",s),w(h,"uniform",p);export{h as default};
//# sourceMappingURL=mod.js.map
